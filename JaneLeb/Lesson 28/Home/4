// Задача 4.
// Рисование фигур: 
// Создайте массив указателей на объекты
//  TwoDShape и 
// используйте полиморфизм 
// для отрисовки каждой фигуры.

#include <iostream>
#include <vector>

class TwoDShape
{
public:
    virtual ~TwoDShape() = default;
    virtual void DrowShape() const = 0;
};

class Square : public TwoDShape
{
public:
    Square( double length, double width ) : Length( length ), Width( width ) {}

    virtual void DrowShape() const override
    {
        std::cout << "Рисуем квадрат. \n";
    }

    const double Length;
    const double Width;
};

class Circle : public TwoDShape
{
public:
    Circle( double radius ) : Radius( radius ) {}

    virtual void DrowShape() const override {
        std::cout << "Рисуем круг. \n";
    }

    const double Radius;
};

class Triangle : public TwoDShape
{
public:
    Triangle( double length, double width ) : Length( length ), Width( width ) {}

    virtual void DrowShape() const override 
    {
        std::cout << "Рисуем треугольник. \n";
    }

    const double Length;
    const double Width;
};

int main() 
{
    setlocale( LC_ALL, "ru" );
    std::vector<std::unique_ptr<TwoDShape>> shapes;
    shapes.push_back( std::make_unique<Square>( 2, 3 ) );
    shapes.push_back( std::make_unique<Triangle>( 3, 7 ) );

    for( const std::unique_ptr<TwoDShape>& x : shapes )
    {
        x->DrowShape();
    }
}
