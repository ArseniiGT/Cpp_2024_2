//Задача 8 : 
// Создайте класс Product, 
// представляющий продукт в магазине, 
// с указанием его названия и цены.
// 
// Создайте класс Customer, 
// представляющий покупателя, 
// с указанием имени 
// и списком купленных продуктов.
//
//  Используйте weak_ptr для ссылки на продукты, 
// чтобы покупатель мог увидеть 
// информацию о купленных продуктах.

#include <iostream>
#include <memory>
#include <vector>
#include <string>

class CCustomer;
class CProduct
{
public:
    //Конструктор класса "продукт"
    CProduct(const std::string& productName, int productPrice ) :
        ProductName(productName), ProductPrice( productPrice )
    {
    }

    CProduct(const CProduct& p):ProductName(p.ProductName), ProductPrice(p.ProductPrice)
    {
    }

//private:
    const std::string ProductName;
    const int ProductPrice;
};

class CCustomer
{
public:
      //Конструктор класса покупатель
    CCustomer( const std::string& customerName, std::shared_ptr<CProduct> good ) :
        CustomerName( customerName )
    {
        CustomerGoods.push_back( good );
    }

    //Метод добавления продукта в список товаров покупателя
    void AddGoods( std::shared_ptr<CProduct> good)
    {
        CustomerGoods.push_back( good );
        std::cout << good->ProductName << std::endl;
        std::cout << good->ProductPrice << std::endl;
    }   

    const std::string CustomerName;
    std::vector<std::weak_ptr<CProduct>> CustomerGoods;
};

int main()
{
    auto product1 = std::make_shared<CProduct>("Juice", 10);
    std::shared_ptr<CProduct> product2 = std::make_shared<CProduct>("Ice cream", 12);
    std::shared_ptr<CProduct> product3 = std::make_shared<CProduct>("Chocolate", 15);

    std::shared_ptr<CCustomer> сustomer1 = std::make_shared<CCustomer>("David", product1);
    сustomer1->AddGoods(product2);
    сustomer1->AddGoods(product3);
}
